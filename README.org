#+TITLE:
#+DATE:    October 18, 2023
#+STARTUP: inlineimages nofold

#+BEGIN_QUOTE
“I’m rarely happier than when spending an entire day programming my
computer to perform automatically a task that would otherwise take me
a good ten seconds to do by hand.” - /Douglas Adams/
#+END_QUOTE

This respository contains my [[https://github.com/hlissner/doom-emacs][doom-emacs]] configuration.

API reference:
https://github.com/hlissner/doom-emacs/blob/develop/docs/api.org

Themes:
https://github.com/hlissner/emacs-doom-themes/tree/screenshots


* Installation

#+BEGIN_SRC sh
git clone git@github.com:kkholst/.doom.d .config/doom
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs
~/.config/emacs/bin/doom install
#+END_SRC

Alter the section [[file:config.org::*Variable definitions]['Variable definitions']] in =config.org= to your needs or add a custom =.doom.d/init.el= file to override definitions (for example =doom-theme=, =doom-font= variables)

VIM users should enable *evil mode* by uncommenting the relevant lines in  =init.el=
#+BEGIN_SRC emacs-lisp
:editor
(evil +everywhere)
#+END_SRC
make sure that relevant directory structures exists (e.g., =~/Projects/notes= and =~/Projects/org= unless altered in the above step).


Afterwards the doom configuration needs to be synchronized (will also expose your shell environment variables to emacs)
#+BEGIN_SRC sh
~/.emacs.d/bin/doom sync
#+END_SRC


* Configuration

This configuration depends on the following components
- =emacs= (>= 27.1)
- =git=
- =R=
- =python3=
- =clang++=
- =texlive=
- =ripgrep=
plus recommendations: =zsh=, =tmux=, =ImageMagick= (and probably a lot of other dependencies I forgot here).

To try out the newest features of Emacs checkout the source code from git://git.sv.gnu.org/emacs.git and build your own binaries (for example with support for ligatures using =harfbuzz=). In Fedora you will need the following packages:
#+BEGIN_SRC sh
sudo dnf install -y libXpm-devel Xaw3d-devel openjpeg-devel libpng-devel librsvg2-devel giflib-devel cairo-devel gpm-devel gnutls-devel libxml2-devel libXft-devel libotf zlib-devel harfbuzz-devel ImageMagick-devel libtiff-devel wxGTK3 git R python3 llvm texlive ripgrep
#+END_SRC

On Mac OS X via homebrew (here the native-comp branch, i.e. gccemacs):
#+BEGIN_SRC sh
brew tap d12frosted/emacs-plus 
brew install emacs-plus@28 --with-modern-doom3-icon --with-native-comp
#+END_SRC

** Other dependencies

For the Python envionment you may need to install [[https://github.com/pyenv/pyenv][pyenv]] (here assuming you are using =zsh=)
#+BEGIN_SRC sh
git clone https://github.com/pyenv/pyenv.git ~/.pyenv
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
#+END_SRC

*** Language Server Protocol (lsp)
- Python:
  #+BEGIN_SRC sh
pip3 install pip setuptools wheel --upgrade --user
pip3 install "python-language-server[all]" pylint nose pytest --user
  #+END_SRC
- R:
  #+BEGIN_SRC R
R -e 'install.packages(c("languageserver")'
  #+END_SRC
- C++:
Can be based on either =ccls= (from =PyPi=) or =clangd=. On Mac OS X this can be installed with [[https://brew.sh/][homebrew]]
  #+BEGIN_SRC sh
  brew install llvm
  #+END_SRC

For debugging (C++) with =dap-debug=, I recommend LLDB's machine interface driver
https://github.com/lldb-tools/lldb-mi. On Fedora this can be compiled with
#+BEGIN_SRC sh
dnf install llvm-devel -y
git clone https://github.com/lldb-tools/lldb-mi
cd lldb-mi
cmake -Bbuild -GNinja
#+END_SRC

Customized configuration can go into the =local.el= file, e.g.

#+BEGIN_SRC emacs-lisp

(setq doom-font (font-spec :family "Literation Mono Powerline:style=Regular" :size 15 :weight 'normal)
      doom-theme 'doom-challenger-deep
      doom-theme 'doom-city-lights
      doom-theme 'doom-solarized-dark
      doom-theme 'doom-sourcerer)
#+END_SRC

Note, the font family can be found in the terminal with the command
#+BEGIN_SRC sh
fc-list :spacing=mono family style | sort
#+END_SRC
