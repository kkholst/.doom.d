#+TITLE:
#+DATE:    December 23, 2020
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#maintainers][Maintainers]]
- [[#prerequisites][Prerequisites]]
- [[#lsp][LSP]]
- [[#configuration][Configuration]]
- [[#troubleshooting][Troubleshooting]]

* Description
# A summary of what this module does.

+ If possible, include a brief list of feature highlights here
+ Like code completion, syntax checking or available snippets
+ Include links to packages & external things where possible

** Maintainers
+ @kkholst (Author)

* Prerequisites


- Language Tool

Language Server Protocol (lsp)
- Python:
  #+BEGIN_SRC sh
pip3 install 'python-language-server[all]' nose pytest cmake
  #+END_SRC
- R:
  #+BEGIN_SRC R
  install.packages("languageserver")
  #+END_SRC
- C++:

  On Mac OS X install LLVM (clangd) via homebrew
  #+BEGIN_SRC sh
  brew install llvm
  #+END_SRC


dap-debug:
[[file:~/local/lldb-mi][file:~/local/lldb-mi]]

- Ligatures:
harfbuzz


#+BEGIN_SRC sh
pip3 install cpplint cclint cppcheck
#+END_SRC


#+BEGIN_SRC emacs-lisp
(require 'flycheck-google-cpplint)
(setq flycheck-c/c++-googlelint-executable "cpplint")
(flycheck-add-next-checker 'c/c++-clang '(t . c/c++-googlelint))
(flycheck-add-next-checker 'c/c++-gcc '(t . c/c++-googlelint))

#+END_SRC

#+RESULTS:
: ((t . c/c++-googlelint) (warning . c/c++-cppcheck))




 git clone https://github.com/pyenv/pyenv.git ~/.pyenv
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc


compile emacs with harfbuzz
sudo dnf install -y libXpm-devel Xaw3d-devel openjpeg-devel libpng-devel librsvg2-devel giflib-devel cairo-devel gpm-devel gnutls-devel libxml2-devel libXft-devel libotf zlib-devel harfbuzz-devel ImageMagick-devel libtiff-devel wxGTK3


emacs, git, R, python3, clang++, texlive, imagemagick,

tmux
zsh

and probably a lot of other dependencies I forgot here.

sudo dnf install ripgrep

git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
git clone git@github.com:kkholst/.doom.d

.emacs.d/bin/doom install

Adapt .doom.d/config.org to your needs and run
.emacs.d/bin/doom install

make sure that relevant directory structure exists
- Projects/notes
- Projects/org


* LSP
lldb debugger:
https://github.com/lldb-tools/lldb-mi

#+BEGIN_SRC sh
dnf install llvm-devel -y

git clone https://github.com/lldb-tools/lldb-mi
cd lldb-mi
cmake -Bbuild -GNinja
#+END_SRC

clangd
pip3 install pip setuptools wheel --upgrade
pip3 install "python-language-server[all]" pylint--user
R -e 'install.packages(c("languageserver")''


* Configuration
# How to configure this module, including common problems and how to address them.


* Troubleshooting
# Common issues and their solution, or places to look for help.
